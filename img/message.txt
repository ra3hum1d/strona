#include <iostream>
#include <string>
#include <random>
#include <algorithm>

std::string map();
void casino();
void forest();
int fight(int enemystrength, int enemyagility);

int money = 100;
int strength = 10;
int agility = 10;

int main()
{
    while (true)
    {
        std::string a;

        std::cout << "Location (casino, forest, q): ";
        std::cin >> a;

        for (auto &c : a) c = tolower(c);

        if (a == "casino")
        {
            casino();
        }
        else if (a == "forest")
        {
            forest();
        }
        else if (a == "q")
        {
            return 1;
        }
        else
        {
            std::cout << "Not a valid location, if you wish to quit type 'q' \n";
        }
    }
}

std::string map()
{
    std::string location = "";

    while (true)
    {
        if (location == "casino")
        {
            std::cout << "Going to the casino! \n";
            return location;
        }
        
        else
        {
            std::cout << "Where to go (casino): ";
            std::cin >> location;
            for (auto &c : location) c = toupper(c);
        }
    }
}

void casino()
{
    bool yesgamble = true;
    std::string userinput;
    int bet = money + 1;

    do
    {
        std::cout << "Do you want to gamble? (yes, no): ";
        std::cin >> userinput;
        for (auto &c : userinput) c = tolower(c);
        if (userinput == "yes")
        {
            yesgamble = true;
        }
        else if (userinput == "no")
        {
            yesgamble = false;
        }
        else
        {
            std::cout << "Invalid input. Please enter 'yes' or 'no'.\n";
        }
    } while (userinput != "yes" && userinput != "no");
    

    while (yesgamble)
    {
        std::random_device rd;
        std::mt19937 gen(rd());
        std::uniform_int_distribution<> dist(1, 38);
        int roll = dist(gen);
        std::string color;

        if (roll == 37 || roll == 38)
        {
            color = "green";
        }
        else if (roll % 2 == 0)
        {
            color = "red";
        }
        else if (roll % 2 == 1)
        {
            color = "black";
        }

        while (true)
        {
            std::cout << "You have " << money << " money \n";
            std::cout << "Place a bet: ";
            std::cin >> bet;

            if (std::cin.fail())
            {
                std::cin.clear();
                std::cin.ignore(std::numeric_limits<std::streamsize>::max(), '\n');
                std::cout << "Invalid input. Please enter a valid number.\n";
                continue;
            }

            if (bet >= 0 && bet <= money)
            {
                break;
            }
            else
            {
                std::cout << "Invalid bet amount. Please enter a number between 0 and " << money << ".\n";
            }
        }

        money -= bet;

        while (true)
        {
            std::cout << "Select a number(1-38) or a color(red, black, green): ";
            std::cin >> userinput;
            for (auto &c : userinput) c = tolower(c);

            if ((userinput == "red" || userinput == "black" || userinput == "green") || (std::all_of(userinput.begin(), userinput.end(), ::isdigit) && std::stoi(userinput) >= 1 && std::stoi(userinput) <= 38))
            {
                break;
            }
            else
            {
                std::cout << "Invalid input.\n";
            }
        }

        std::cout << color << "\n";
        std::cout << roll << "\n";

        if (userinput == std::to_string(roll))
        {
            money = money + bet * 36;
            std::cout << "You were very very lucky! Now you have " << money << " money \n";
        }
        else if (userinput == color)
        {
            if (userinput == "green")
            {
                money = money + bet * 18;
                std::cout << "You were very lucky! Now you have " << money << " money \n";
            }
            else
            {
                money = money + bet * 2;
                std::cout << "You were lucky! " << money << " money \n";
            }
        }
        else
        {
            std::cout << "You lost! Now you have " << money << " money \n";
        }
        
        for (auto &c : userinput) c = tolower(c);
        do
        {
            if (userinput == "no")
            {
                yesgamble = false;
            }
            else if (userinput == "yes")
            {
                bet = money + 1;
                yesgamble = true;
                break;
            }
            else
            {
                std::cout << "Do you want to continue(yes, no): ";
                std::cin >> userinput;
                bet = money + 1;
            }
        } while (yesgamble);
    }
}

void forest()
{
    bool stay = true;

    while (stay)
    {
        std::string userinput;
        std::cout << "You are in the forest, do you wish to leave, face the bunny, the fox, the wolf, or the bear? (leave, bunny, fox, wolf, bear): ";
        std::cin >> userinput;
        for (auto &c : userinput) c = tolower(c);
        if (userinput == "leave")
        {
            stay = false;
        }
        else if (userinput == "bunny")
        {
            std::cout << "You faced the bunny!\n";
            // Add bunny encounter logic here
        }
        else if (userinput == "fox")
        {
            std::cout << "You faced the fox!\n";
            // Add fox encounter logic here
        }
        else if (userinput == "wolf")
        {
            std::cout << "You faced the wolf!\n";
            // Add wolf encounter logic here
        }
        else if (userinput == "bear")
        {
            std::cout << "You faced the bear!\n";
            // Add bear encounter logic here
        }
        else
        {
            std::cout << "Invalid input.\n";
        }
    }
}